#!/bin/bash

DEBUG=0
PADDING=12

dbg()
{
    [ $DEBUG -eq 1 ] && echo $*
}

die()
{
    echo -e $*
    exit 1
}

usage()
{
    [ -n "$1" ] && echo $1
    die "usage: $0 <egrep opts> <zabbix logfile>\n\tegrep opts - must include grep pattern"
}

PROCS=(
	"active checks"         "acti chks"
	"agent poller"          "ag poller"
	"alerter"               "  alerter"
	"alert manager"         "alrt mngr"
	"alert syncer"          "alrt sncr"
	"availability manager"  "avail mgr"
	"collector"             "collector"
	"configuration syncer"  "cfg syncr"
	"connector manager"     "conn mngr"
	"connector worker"      "conn wrkr"
	"data sender"           "data sndr"
	"db watchdog"           "db watchr"
	"discoverer"            "discoverr"
	"discovery manager"     "disc mngr"
	"discovery worker"      "disc wrkr"
	"escalator"             "escalator"
	"ha manager"            "ha manger"
	"heartbeat sender"      "hrtb sndr"
	"history poller"        "hist polr"
	"history syncer"        "hist sncr"
	"housekeeper"           "hous kepr"
	"http agent poller"     "ht ag plr"
	"http poller"           "http pllr"
	"ipmi manager"          "ipmi mngr"
	"ipmi poller"           "ipmi pllr"
	"icmp pinger"           "icmp pngr"
	"java poller"           "jav pollr"
	"listener"              " listener"
	"lld manager"           "lld mangr"
	"lld worker"            "lld workr"
	"main process"          "main proc"
	"node watcher"          "nod wtchr"
	"odbc poller"           "odbcpollr"
	"poller"                "   poller"
	"preprocessing manager" "prep mngr"
	"preprocessing worker"  "prep wrkr"
	"proxy poller"          "prx pollr"
	"report writer"         "rprt wrtr"
	"report manager"        "rprt mngr"
	"service manager"       "srvc mngr"
	"snmp poller"           "snmp pllr"
	"snmp trapper"          "snmp trpr"
	"self-monitoring"       "  selfmon"
	"task manager"          "task mngr"
	"timer"                 "    timer"
	"trapper"               "  trapper"
	"trigger housekeeper"   "trg housk"
	"unreachable poller"    "unr pollr"
	"vmware collector"      "vmwr cltr"
)

[ $# -lt 2 ] && usage

# get last cmd-line parameter
for LOGF; do :; done

TMPF="/tmp/lgrep.tmp"

[ -n "$LOGF" ] || usage
[ -f $LOGF ] || usage  "log file $LOGF not found"

replace_ptrn=
egrep --color=none ' (server|proxy|agent) #[0-9]+ started \[[-a-z0-9 #]+\]$' $LOGF | while read line; do
    input=$line
    procpid=$(echo $input | awk -F: '{print $1}')
    input=$(echo $input | sed 's/.*\[\(.*\)\]$/\1/')
    procname=$(echo $input | awk -F# '{print $1}' | sed 's/^\s*\(.*\S\)\s*$/\1/')
    procnum=$(echo $input | awk -F# '{print $2}' | sed 's/^\s*\(.*\S\)\s*$/\1/')

    dbg "line='$line' procpid='$procpid' procname='$procname' procnum='$procnum'"

    n=0
    while [ $n -lt ${#PROCS[*]} ]; do
	fullname=${PROCS[$n]}
	((n++))
	shortname=${PROCS[$n]}
	((n++))
	if [ "$procname" = "$fullname" ]; then
	    dbg "  (from log) $procname == $fullname (predefined)"
	    [ -n "$replace_ptrn" ] && replace_ptrn="${replace_ptrn};"
	    repl="$shortname"
	    [ -n "$procnum" ] && repl="${repl}#${procnum}"
	    let pads=$PADDING-${#repl}
	    while [ $pads -gt 0 ]; do ((pads--)); repl=" ${repl}"; done
	    replace_ptrn="${replace_ptrn}s/${procpid}/${repl}/"
	    dbg "  replace_ptrn=$replace_ptrn"
	else
	    dbg "  (from log) $procname != $fullname (predefined)"
	fi
    done
    echo "$replace_ptrn" > $TMPF
done

[ -f $TMPF ] || die "no 'started [process]' messages in a log file"

replace_ptrn=$(cat $TMPF)
rm -f $TMPF

[ "" != "$replace_ptrn" ] || die "no 'started [process]' messages in a log file"

# handle HA manager entry separately, it has different format
procpid=$(grep --color=none 'starting HA manager' $LOGF | cut -f1 -d:)
replace_ptrn="$replace_ptrn;s/$procpid/  ha manager/"

egrep "$@" | sed "$replace_ptrn"
